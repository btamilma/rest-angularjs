<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/integration/jms
http://www.springframework.org/schema/integration/jms/spring-integration-jms-2.0.xsd
http://www.springframework.org/schema/integration
http://www.springframework.org/schema/integration/spring-integration.xsd
http://www.springframework.org/schema/jdbc
http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
">

	<import resource="classpath:jms-config.xml" />
	<import resource="classpath:dataAccess.xml" />


	<int-jms:message-driven-channel-adapter connection-factory="connectionFactory"
											destination-name="queue.request"
											channel="inSlaveStepExecutionReq"/>
											
<!-- 	<int-jms:inbound-gateway request-channel="inSlaveStepExecutionReq"
		request-destination="requestQueue" connection-factory="connectionFactory" /> -->

	<int:channel id="inSlaveStepExecutionReq" />

	<int:service-activator ref="stepExecutionRequestHandler"
		input-channel="inSlaveStepExecutionReq" output-channel="outSlaveStepExecRes" />

	<int:channel id="outSlaveStepExecRes" />

	<int-jms:outbound-gateway request-channel="outSlaveStepExecRes"
		request-destination="replyQueue" connection-factory="connectionFactory" />


	<bean id="stepExecutionRequestHandler"
		class="org.springframework.batch.integration.partition.StepExecutionRequestHandler">
		<property name="jobExplorer" ref="jobExplorer" />
		<property name="stepLocator" ref="stepLocator" />
	</bean>

	<batch:step id="simpleRecordsStep">
		<batch:tasklet allow-start-if-complete="true">
			<batch:chunk reader="partitionedRecordReader" writer="simpleRecordWriter"
				commit-interval="3" />
		</batch:tasklet>
	</batch:step>

	<bean id="partitionedRecordReader"
		class="com.balatamilmani.batch.remotepartitioning.PartitionedRecordReader" />

	<bean id="simpleRecordWriter"
		class="com.balatamilmani.batch.remotepartitioning.SimpleRecordWriter" />
	<!--Slave configuration -->

	<bean id="jobOperator"
		class="org.springframework.batch.core.launch.support.SimpleJobOperator"
		p:jobLauncher-ref="jobLauncher" p:jobExplorer-ref="jobExplorer"
		p:jobRepository-ref="jobRepository" p:jobRegistry-ref="jobRegistry" />

	<bean id="jobExplorer"
		class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean"
		p:dataSource-ref="dataSource" />

	<bean id="jobRegistry"
		class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

	<bean
		class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
		<property name="jobRegistry" ref="jobRegistry" />
	</bean>

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<bean id="stepLocator"
		class="org.springframework.batch.integration.partition.BeanFactoryStepLocator" />

	<batch:job-repository id="jobRepository"
		transaction-manager="transactionManager" data-source="dataSource"
		isolation-level-for-create="READ_COMMITTED" />
</beans>